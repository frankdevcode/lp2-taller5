version: '3.8'

services:
  db:
    build: ./database
    container_name: blog_db
    environment:
      POSTGRES_USER: bloguser
      POSTGRES_PASSWORD: blogpassword
      POSTGRES_DB: blogdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bloguser -d blogdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: ./api
    container_name: blog_api
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URI: postgresql://bloguser:blogpassword@db:5432/blogdb
      PYTHONPATH: /app
    ports:
      - "5000:5000"
    volumes:
      - ./api:/app
      - api_logs:/app/logs
    command: uvicorn main:app --host 0.0.0.0 --port 5000 --reload

  web:
    build: ./web
    container_name: blog_web
    depends_on:
      - db
      - api
    environment:
      FLASK_APP: app.run:app
      FLASK_ENV: development
      FLASK_DEBUG: 1
      PYTHONPATH: /app
      SECRET_KEY: tu-clave-secreta-aqui
      API_URL: http://api:5000
      DATABASE_URL: postgresql://bloguser:blogpassword@db:5432/blogdb
    ports:
      - "8000:8000"
    volumes:
      - ./web:/app
      - web_logs:/app/logs
    command: flask run --host=0.0.0.0 --port=8000

volumes:
  postgres_data:
  api_logs:
  web_logs:

networks:
  default:
    driver: bridge
